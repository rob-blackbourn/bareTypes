{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \u00b6 This package contains types shared between bareASGI and bareClient packages.","title":"Welcome"},{"location":"#welcome","text":"This package contains types shared between bareASGI and bareClient packages.","title":"Welcome"},{"location":"api/baretypes.types/","text":"module baretypes.types \u00b6 Summary \u00b6 Types for bareASGI and bareClient class HttpDisconnectError ( Exception ) \u00b6 Summary \u00b6 Exception raise on HTTP disconnect class HttpInternalError ( Exception ) \u00b6 Summary \u00b6 Exception raised for an internal error class HttpRouter \u00b6 Summary \u00b6 The interface for an HTTP router baretypes . HttpRouter ( ) -> None property HttpRouter . not_found_response \u00b6 Summary \u00b6 The response when a handler could not be found for a method/path not_found_response -> HttpResponse not_found_response : HttpResponse = ... method HttpRouter . add \u00b6 Summary \u00b6 Add an HTTP request handler HttpRouter . add ( methods : AbstractSet[str] , path : str , callback : HttpRequestCallback ) -> Any Parameters \u00b6 methods : AbstractSet[str] (optional) The supported HTTP methods. path : str (optional) The path. callback : HttpRequestCallback (optional) The request handler. Returns \u00b6 Any : method HttpRouter . resolve \u00b6 Summary \u00b6 Resolve a request to a handler with the route matches HttpRouter . resolve ( method : str , path : str ) -> Tuple[Optional[HttpRequestCallback], Optional[RouteMatches]] Parameters \u00b6 method : str (optional) The HTTP method. path : str (optional) The path. Returns \u00b6 Tuple[Optional[HttpRequestCallback], Optional[RouteMatches]] : A handler and the optional route matches. class ParseError ( Exception ) \u00b6 Summary \u00b6 Exception raised on a parse error class WebSocket \u00b6 Summary \u00b6 The interface for a server side WebSocket. baretypes . WebSocket ( ) -> None async method WebSocket . accept \u00b6 Summary \u00b6 Accept the socket. async WebSocket . accept ( subprotocol : Optional[str] , headers : Optional[List[Header]] ) -> Any Parameters \u00b6 subprotocol : Optional[str] An optional subprotocol sent by the client. Defaults to None. headers : Optional[List[Header]] Optional headers to send. Defaults to None. Returns \u00b6 Any : Description \u00b6 This must be done before any other action is taken. async method WebSocket . close \u00b6 Summary \u00b6 Close the WebSocket. async WebSocket . close ( code : int ) -> Any Parameters \u00b6 code : int The reason code. Defaults to 1000. Returns \u00b6 Any : async method WebSocket . receive \u00b6 Summary \u00b6 Receive data from the WebSocket. async WebSocket . receive ( ) -> Optional[Union[bytes, str]] Returns \u00b6 Optional[Union[bytes, str]] : Either bytes of a string depending on the client. async method WebSocket . send \u00b6 Summary \u00b6 Send data to the client. async WebSocket . send ( content : Union[bytes, str] ) -> Any Parameters \u00b6 content : Union[bytes, str] (optional) Either bytes or a string. Returns \u00b6 Any : class WebSocketInternalError ( Exception ) \u00b6 Summary \u00b6 Exception raised for a WebSocket internal error class WebSocketRouter \u00b6 Summary \u00b6 The interface for a WebSocket router baretypes . WebSocketRouter ( ) -> None method WebSocketRouter . add \u00b6 Summary \u00b6 Add the WebSocket handler for a route WebSocketRouter . add ( path : str , callback : WebSocketRequestCallback ) -> Any Parameters \u00b6 path : str (optional) The path. callback : WebSocketRequestCallback (optional) The handler Returns \u00b6 Any : method WebSocketRouter . resolve \u00b6 Summary \u00b6 Resolve a route to a handler WebSocketRouter . resolve ( path : str ) -> Tuple[Optional[HttpRequestCallback], Optional[RouteMatches]] Parameters \u00b6 path : str (optional) The path Returns \u00b6 Tuple[Optional[HttpRequestCallback], Optional[RouteMatches]] : A handler and possible route matches","title":"baretypes"},{"location":"api/baretypes.types/#module-baretypestypes","text":"","title":"module baretypes.types"},{"location":"api/baretypes.types/#summary","text":"Types for bareASGI and bareClient","title":"Summary"},{"location":"api/baretypes.types/#class-httpdisconnecterrorexception","text":"","title":"class HttpDisconnectError(Exception)"},{"location":"api/baretypes.types/#summary_1","text":"Exception raise on HTTP disconnect","title":"Summary"},{"location":"api/baretypes.types/#class-httpinternalerrorexception","text":"","title":"class HttpInternalError(Exception)"},{"location":"api/baretypes.types/#summary_2","text":"Exception raised for an internal error","title":"Summary"},{"location":"api/baretypes.types/#class-httprouter","text":"","title":"class HttpRouter"},{"location":"api/baretypes.types/#summary_3","text":"The interface for an HTTP router baretypes . HttpRouter ( ) -> None","title":"Summary"},{"location":"api/baretypes.types/#property-httprouternot_found_response","text":"","title":"property HttpRouter.not_found_response"},{"location":"api/baretypes.types/#summary_4","text":"The response when a handler could not be found for a method/path not_found_response -> HttpResponse not_found_response : HttpResponse = ...","title":"Summary"},{"location":"api/baretypes.types/#method-httprouteradd","text":"","title":"method HttpRouter.add"},{"location":"api/baretypes.types/#summary_5","text":"Add an HTTP request handler HttpRouter . add ( methods : AbstractSet[str] , path : str , callback : HttpRequestCallback ) -> Any","title":"Summary"},{"location":"api/baretypes.types/#parameters","text":"methods : AbstractSet[str] (optional) The supported HTTP methods. path : str (optional) The path. callback : HttpRequestCallback (optional) The request handler.","title":"Parameters"},{"location":"api/baretypes.types/#returns","text":"Any :","title":"Returns"},{"location":"api/baretypes.types/#method-httprouterresolve","text":"","title":"method HttpRouter.resolve"},{"location":"api/baretypes.types/#summary_6","text":"Resolve a request to a handler with the route matches HttpRouter . resolve ( method : str , path : str ) -> Tuple[Optional[HttpRequestCallback], Optional[RouteMatches]]","title":"Summary"},{"location":"api/baretypes.types/#parameters_1","text":"method : str (optional) The HTTP method. path : str (optional) The path.","title":"Parameters"},{"location":"api/baretypes.types/#returns_1","text":"Tuple[Optional[HttpRequestCallback], Optional[RouteMatches]] : A handler and the optional route matches.","title":"Returns"},{"location":"api/baretypes.types/#class-parseerrorexception","text":"","title":"class ParseError(Exception)"},{"location":"api/baretypes.types/#summary_7","text":"Exception raised on a parse error","title":"Summary"},{"location":"api/baretypes.types/#class-websocket","text":"","title":"class WebSocket"},{"location":"api/baretypes.types/#summary_8","text":"The interface for a server side WebSocket. baretypes . WebSocket ( ) -> None","title":"Summary"},{"location":"api/baretypes.types/#async-method-websocketaccept","text":"","title":"async method WebSocket.accept"},{"location":"api/baretypes.types/#summary_9","text":"Accept the socket. async WebSocket . accept ( subprotocol : Optional[str] , headers : Optional[List[Header]] ) -> Any","title":"Summary"},{"location":"api/baretypes.types/#parameters_2","text":"subprotocol : Optional[str] An optional subprotocol sent by the client. Defaults to None. headers : Optional[List[Header]] Optional headers to send. Defaults to None.","title":"Parameters"},{"location":"api/baretypes.types/#returns_2","text":"Any :","title":"Returns"},{"location":"api/baretypes.types/#description","text":"This must be done before any other action is taken.","title":"Description"},{"location":"api/baretypes.types/#async-method-websocketclose","text":"","title":"async method WebSocket.close"},{"location":"api/baretypes.types/#summary_10","text":"Close the WebSocket. async WebSocket . close ( code : int ) -> Any","title":"Summary"},{"location":"api/baretypes.types/#parameters_3","text":"code : int The reason code. Defaults to 1000.","title":"Parameters"},{"location":"api/baretypes.types/#returns_3","text":"Any :","title":"Returns"},{"location":"api/baretypes.types/#async-method-websocketreceive","text":"","title":"async method WebSocket.receive"},{"location":"api/baretypes.types/#summary_11","text":"Receive data from the WebSocket. async WebSocket . receive ( ) -> Optional[Union[bytes, str]]","title":"Summary"},{"location":"api/baretypes.types/#returns_4","text":"Optional[Union[bytes, str]] : Either bytes of a string depending on the client.","title":"Returns"},{"location":"api/baretypes.types/#async-method-websocketsend","text":"","title":"async method WebSocket.send"},{"location":"api/baretypes.types/#summary_12","text":"Send data to the client. async WebSocket . send ( content : Union[bytes, str] ) -> Any","title":"Summary"},{"location":"api/baretypes.types/#parameters_4","text":"content : Union[bytes, str] (optional) Either bytes or a string.","title":"Parameters"},{"location":"api/baretypes.types/#returns_5","text":"Any :","title":"Returns"},{"location":"api/baretypes.types/#class-websocketinternalerrorexception","text":"","title":"class WebSocketInternalError(Exception)"},{"location":"api/baretypes.types/#summary_13","text":"Exception raised for a WebSocket internal error","title":"Summary"},{"location":"api/baretypes.types/#class-websocketrouter","text":"","title":"class WebSocketRouter"},{"location":"api/baretypes.types/#summary_14","text":"The interface for a WebSocket router baretypes . WebSocketRouter ( ) -> None","title":"Summary"},{"location":"api/baretypes.types/#method-websocketrouteradd","text":"","title":"method WebSocketRouter.add"},{"location":"api/baretypes.types/#summary_15","text":"Add the WebSocket handler for a route WebSocketRouter . add ( path : str , callback : WebSocketRequestCallback ) -> Any","title":"Summary"},{"location":"api/baretypes.types/#parameters_5","text":"path : str (optional) The path. callback : WebSocketRequestCallback (optional) The handler","title":"Parameters"},{"location":"api/baretypes.types/#returns_6","text":"Any :","title":"Returns"},{"location":"api/baretypes.types/#method-websocketrouterresolve","text":"","title":"method WebSocketRouter.resolve"},{"location":"api/baretypes.types/#summary_16","text":"Resolve a route to a handler WebSocketRouter . resolve ( path : str ) -> Tuple[Optional[HttpRequestCallback], Optional[RouteMatches]]","title":"Summary"},{"location":"api/baretypes.types/#parameters_6","text":"path : str (optional) The path","title":"Parameters"},{"location":"api/baretypes.types/#returns_7","text":"Tuple[Optional[HttpRequestCallback], Optional[RouteMatches]] : A handler and possible route matches","title":"Returns"}]}